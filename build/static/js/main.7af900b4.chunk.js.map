{"version":3,"sources":["images/andrew-neel-ute2XAFQU2I-unsplash.jpg","utils/storage.js","user-context.js","pages/Register/index.js","components/Notification.jsx","services/login.js","pages/Login/index.js","components/AddArea.jsx","components/Editable.jsx","components/List.jsx","services/cards.js","components/CardDetails.jsx","components/Modal.jsx","services/lists.js","pages/Kanban/index.js","routes.js","App.js","index.js"],"names":["module","exports","storageKey","user","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","UserContext","createContext","ContextWrapper","children","useState","storage","isAuthenticated","setIsAuthenticated","Provider","value","Register","Notification","notification","style","color","type","message","login","credentials","a","axios","post","response","data","Login","username","setUsername","password","setPassword","setNotification","useContext","handleSubmit","event","preventDefault","loginService","handleNotification","setTimeout","className","src","require","alt","onSubmit","autoFocus","align","placeholder","onChange","target","href","rel","AddArea","area","id","addNewItem","addFormWrapRef","useRef","addFormRef","newItem","setNewItem","showForm","setShowForm","useEffect","handleClickOutside","e","current","contains","dispatchEvent","Event","cancelable","document","addEventListener","removeEventListener","ref","onClick","Editable","updateElement","isEditing","edit","setEdit","newValue","setNewValue","formWrapRef","formRef","props","getElementById","select","handleEdit","htmlFor","onBlur","onFocus","Card","card","onOpenCard","tabIndex","onKeyDown","key","title","List","list","onAddCard","updateTitle","onDelete","newTitle","aria-label","cards","length","map","getConfig","headers","Authorization","token","create","newObject","update","put","getById","get","remove","delete","ListsDropDown","lists","currentList","onMove","CardDetails","onCardClose","updateList","makeModalStatic","removeFromList","cardDetails","setCardDetails","showLists","setShowLists","setTimer","isCancelled","cardService","then","tickingFrom","Date","interval","setInterval","now","clearInterval","updateCard","console","log","position","top","right","fontSize","updateCardTitle","oldList","description","handleDelete","Modal","onCloseModal","freeze","modalRef","keyListener","listener","keyListenersMap","keyCode","handleCloseModal","Map","focusableModalElements","querySelectorAll","firstFocusableElement","lastFocusableElement","activeElement","focus","shiftKey","aria-modal","role","getAll","Kanban","setLists","showCard","setShowCard","cardToShow","setCardToShow","freezeModal","setFreezeModal","listService","initialLists","handleAddNewCard","cardObject","returnedCard","l","concat","dueDate","handleOpenCard","handleUpdateTitle","updatedList","handleDeleteList","filter","cardInList","flag","c","listObject","returnedList","Routes","path","exact","to","component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.7af900b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/andrew-neel-ute2XAFQU2I-unsplash.74d77958.jpg\";","const storageKey = 'loggedTaskManagerAppUser'\n\nconst saveUser = (user) =>\n  localStorage.setItem(storageKey, JSON.stringify(user))\n\nconst loadUser = () =>\n  JSON.parse(localStorage.getItem(storageKey))\n\nconst logoutUser = () =>\n  localStorage.removeItem(storageKey)\n\nexport default {\n  saveUser,\n  loadUser,\n  logoutUser\n}","//doesnt make much sense now as I have only one page to show upon logging in, when there is a navbar and more pages lets add it\n\nimport React, { useState, createContext } from 'react'\nimport storage from './utils/storage'\n\nexport const UserContext = createContext()\n\nexport const ContextWrapper = ({ children }) => {\n  const defaultValueHandler = () => {\n    const user = storage.loadUser()\n    if (user) return true\n    return false\n  }\n\n  const [isAuthenticated, setIsAuthenticated] = useState(defaultValueHandler())\n\n  const user = {\n    isAuthenticated,\n    setIsAuthenticated\n  }\n\n  return (\n    <UserContext.Provider value={user}>\n      {children}\n    </UserContext.Provider>\n  )\n}\n","import React from 'react'\n\nconst Register = () => {\n  return <h1>Register to the Task Management app</h1>\n}\n\nexport default Register","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if ( !notification ) {\n    return null\n  }\n\n  const style = {\n    // borderStyle: 'solid',\n    // borderRadius: 5,\n    // padding: 10,\n    color: notification.type === 'success' ? 'green' : 'red',\n    // background: 'lightgrey'\n  }\n\n  return <div style={style}>\n    {notification.message}\n  </div>\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useContext, useState } from 'react'\nimport Notification from '../../components/Notification'\nimport loginService from '../../services/login'\nimport { UserContext } from '../../user-context'\nimport storage from '../../utils/storage'\nimport './login.css'\n\nconst Login = () => {\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [notification, setNotification] = useState('')\n  const { setIsAuthenticated } = useContext(UserContext)\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    try{\n      const user = await loginService.login({ username, password })\n      setUsername('')\n      setPassword('')\n      storage.saveUser(user)\n      setIsAuthenticated(true)\n    }catch(err){\n      handleNotification('Invalid username or password', 'error')\n    }\n  }\n\n  const handleNotification = (message, type) => {\n    setNotification({\n      message, type\n    })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  return (\n    <div className='login-page'>\n      <header>\n        <h1>Task Management app</h1>\n      </header>\n      <main className='main-login'>\n        <div className='login-img-wrapper'>\n          <img className='login-img' src={require('../../images/andrew-neel-ute2XAFQU2I-unsplash.jpg')} alt=''/>\n        </div>\n        <div className='login-content'>\n          <h2>Login</h2>\n          <Notification notification={notification} />\n          <form className='login-form' onSubmit={handleSubmit}>\n            <input\n              className='login-input'\n              autoFocus\n              type='text'\n              align='center'\n              placeholder='Username'\n              value={username}\n              onChange={event => setUsername(event.target.value)}\n            />\n            <input\n              className='login-input'\n              type='password'\n              align='center'\n              placeholder='Password'\n              value={password}\n              onChange={event => setPassword(event.target.value)}\n            />\n            <button className='primary' type='submit'>Sign in</button>\n            <button className='secondary'>Register</button>\n          </form>\n        </div>\n\n      </main>\n      <footer>\n        <p className='attribution'>\n          <span>Photo by </span>\n          <a href='https://unsplash.com/@andrewtneel' target='_blank' rel='noopener noreferrer'>Andrew Neel</a>\n          <span> on </span>\n          <a href='https://unsplash.com/' target='_blank' rel='noopener noreferrer'>unsplash</a>\n        </p>\n      </footer>\n    </div>\n  )\n}\n\nexport default Login","import React, { useRef, useState, useEffect } from 'react'\nimport './AddArea.css'\n// Reuseable add area for both card and form\nconst AddArea = ({ area, id, addNewItem }) => {\n\n  const addFormWrapRef = useRef()\n  const addFormRef = useRef()\n\n  const [newItem, setNewItem] = useState('')\n  const [showForm,setShowForm] = useState('')\n\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (addFormWrapRef.current.contains(e.target)) {\n        // inside click\n        return\n      }\n      //Submit the form on outside click, it will make a new item (list/card) if the field is not empty.\n      //In either case form will be closed on an outside click\n      addFormRef.current.dispatchEvent(new Event('submit', { cancelable: true }))\n    }\n    if(showForm){\n      document.addEventListener('mousedown', handleClickOutside)\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  },[showForm])\n\n  const onSubmit = e => {\n    e.preventDefault()\n    newItem && addNewItem(newItem,id) // ID is passed for card to identify on which list card should be created\n    //Id will be null for a new list\n    setNewItem('')\n    setShowForm(false)\n  }\n\n  const onCancel = e => {\n    e.preventDefault()\n    setNewItem('')\n    setShowForm(false)\n  }\n\n  return showForm ?\n    <div className='add-form-wrapper' ref={addFormWrapRef}>\n      <form id='add-form' ref={addFormRef} onSubmit={onSubmit} >\n        <textarea\n          id='add-input'\n          placeholder={`Enter a title for the ${area}`}\n          value={newItem}\n          onChange={e => setNewItem(e.target.value)}\n          autoFocus\n        />\n        <div className='add-area-btns'>\n          <button type='submit' className='add-btn'> Add </button>\n          <button type= 'reset' onClick={onCancel} className='cancel-btn'> Cancel </button>\n        </div>\n      </form>\n    </div>\n    : <button className={`add-${area}`} onClick={() => setShowForm(true)}>\n      <i className=\"fas fa-plus\"></i> <strong>Add {area}</strong></button>\n}\n\nexport default AddArea","import React, { useState, useRef, useEffect } from 'react'\nimport './Editable.css'\n\n// The reuseable editable component is used to show a text box when an element is clicked.\n// When there is a tab out or when there is a click outside the textarea, it should call an update request\n// which will then be handled in the parent component. An optional isEditing function is passed as a prop which is\n// used to indicate that the Editable component is in editing mode. This was done to make sure that if Editable is a\n// child of a Modal then the Modal can be frozen when editable is clicked so an outside click would result in closing\n// of editable component but not Modal close (was causing memory leaks by updating state after unmount)\n// This component also requires that the edit state be updated from the parent component, which can be done using useRef\n// and useImperativeHandle as explained here https://fullstackopen.com/en/part5/props_children_and_proptypes#references-to-components-with-ref\n// but this would result in too many refs one for each editable child component, which is not ideal\n// Solved thanks to this blog https://blog.logrocket.com/the-complete-guide-to-building-inline-editable-ui-in-react/\n\nconst Editable = ({ children, updateElement, placeholder, isEditing }) => {\n\n  const [edit,setEdit] = useState(false)\n  const [newValue,setNewValue] = useState('')\n\n  const formWrapRef = useRef()\n  const formRef = useRef()\n\n  useEffect(() => {\n\n    setNewValue(children.props.children)\n\n    const handleClickOutside = e => {\n      if (formWrapRef.current.contains(e.target)) {\n        // inside click\n        return\n      }\n      //Submit the form on outside click\n      formRef.current.dispatchEvent(new Event('submit'))\n    }\n    if(edit){\n      document.addEventListener('mousedown', handleClickOutside)\n      document.getElementById('editable').select()\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  },[edit, children.props.children ])\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setEdit(false)\n    placeholder !== newValue && updateElement(newValue)\n  }\n\n  const handleEdit = () => {\n    setEdit(true)\n    isEditing && isEditing(true)\n  }\n\n  return edit ?\n    <div className='editable-form-wrapper' ref={formWrapRef}>\n      <form className='editable-form' ref={formRef} onSubmit={handleSubmit}>\n        <label htmlFor=\"editable\" className='sr-only'>{`Textarea for ${children.props.className}`}</label>\n        <textarea\n          className={`editable-${children.props.className}`}\n          id='editable'\n          autoFocus\n          placeholder={placeholder}\n          value={placeholder === newValue ? '' : newValue}\n          onChange={({ target }) => setNewValue(target.value)}\n          onBlur={(e) => handleSubmit(e)}\n        />\n      </form>\n    </div>\n    : <div className='editable-child'\n      onClick={handleEdit}\n      onFocus={handleEdit}\n    >{ children }</div>\n}\n\nexport default Editable","import React from 'react'\nimport AddArea from './AddArea'\nimport Editable from './Editable'\nimport './List.css'\n\nconst Card = ({ card, onOpenCard }) => {\n\n\n  return <div\n    tabIndex=\"0\"\n    className='card'\n    onClick={() => onOpenCard(card.id)}\n    onKeyDown={(e) => e.key === 'Enter' && onOpenCard(card.id)}\n  >\n    <p>{card.title}</p>\n  </div>\n}\n\nconst List = ({ list, onAddCard, onOpenCard, updateTitle, onDelete }) => {\n\n  return (<div className='list'>\n    <Editable\n    //Since title is a required field if it has been left empty no update will occur\n      updateElement={newTitle => newTitle && updateTitle({ ...list,title: newTitle })}\n    >\n      <h2 tabIndex=\"0\" className='list-title' aria-label=\"List title\">{list.title}</h2>\n    </Editable>\n    <div className='cards-wrapper'>\n      {list.cards.length !== 0 ? list.cards.map(card => <Card key={card.id} card={card} onOpenCard={onOpenCard} />)\n        : <div onClick={() => onDelete(list.id)}>\n          <label htmlFor='delete-list' className='sr-only'>Delete list</label>\n          <i id='delete-list' className=\"fas fa-trash-alt\" tabIndex='0'></i>\n        </div>\n      }\n    </div>\n    <AddArea\n      area='card'\n      addNewItem={onAddCard}\n      id={list.id}\n    />\n  </div>)\n}\n\nexport default List","import axios from 'axios'\nimport storage from '../utils/storage'\n\nconst baseUrl = '/api/cards'\n\nconst getConfig = () => {\n  return {\n    headers: { Authorization: `bearer ${storage.loadUser().token}` }\n  }\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject, getConfig())\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${ baseUrl }/${id}`, newObject, getConfig())\n  return response.data\n}\n\nconst getById = async (id) => {\n  const response = await axios.get(`${ baseUrl }/${id}`, getConfig())\n  return response.data\n}\n\nconst remove = async(id) => {\n  await axios.delete(`${ baseUrl }/${id}`, getConfig())\n}\n\nexport default { create, update, getById, remove }","//Child of the modal component. Remember to not add any handling onCardClose within this module and not send any\n//parameters back so that there is consistency when the modal is closed by an outside click or esc key and using\n// the cancel button from here.\n//To dos Pull timer and other functionalities out of this component its getting too crowded here\n//The new activity log should also be a new component.\n\nimport React, { useState, useEffect } from 'react'\nimport cardService from '../services/cards'\nimport Editable from './Editable'\nimport './CardDetails.css'\n\nconst ListsDropDown = ({ lists, currentList, onMove }) => {\n\n  return (\n    <>\n      <label htmlFor='lists' className='sr-only'>Choose a list to move card to</label>\n      <select id='lists-select' onChange={() => onMove(document.getElementById('lists-select').value)}>\n        {/* <option disabled defaultValue>Move Card</option> */}\n        <option value={currentList.id}>{currentList.title}</option>\n        {lists.map(list => list.id !== currentList.id &&\n        <option key={list.id} value={list.id} >{list.title}</option>)}\n      </select>\n    </>\n  )\n}\n\nconst CardDetails = ({ card, onCardClose, updateList, makeModalStatic, lists, removeFromList }) => {\n\n  const [cardDetails, setCardDetails] = useState('')\n  const [showLists, setShowLists] = useState('')\n\n  const [timer,setTimer] = useState()\n\n  useEffect(() => {\n\n    let isCancelled = false\n\n    cardService\n      .getById(card)\n      .then(response => {\n        !isCancelled  && setCardDetails({ ...response, tickingFrom: new Date(response.tickingFrom) })\n      })\n\n    return () => {\n      isCancelled = true\n    }\n\n  },[card])\n\n\n  useEffect(() => {\n    let interval\n    if(cardDetails.tickingFrom){\n      interval = setInterval(() => {\n        setTimer(new Date(Date.now()) - cardDetails.tickingFrom)\n      }, 1000)\n    } else {\n      clearInterval(interval)\n    }\n    return () => clearInterval(interval)\n  },[cardDetails.tickingFrom])\n\n  const cancelStyle = {\n    position: 'absolute',\n    top: '10px',\n    right: '15px',\n    fontSize: '1.7rem',\n    color: '#767c77',\n  }\n\n  //   const clockStyle = {\n  //     fontSize: '2rem'\n  //   }\n\n  const formatDate = (date) => {\n    return new Date(date).toLocaleString('en-GB', { year: 'numeric', month: 'short', day: 'numeric',hour: 'numeric',minute: 'numeric', second: 'numeric' })\n  }\n\n  const onTimerClick = () => {\n    if(cardDetails.tickingFrom){\n      const timeSpent = [...cardDetails.timeSpent,{ start: cardDetails.tickingFrom, stop: Date.now() }]\n      const tickingFrom = null\n      const { list, id, title } = cardDetails\n      updateCard({ ...cardDetails,\n        list: list.id,\n        tickingFrom,\n        timeSpent\n      })\n      updateList({\n        list: list.id,\n        id,\n        title,\n        tickingFrom\n      })\n\n    } else {\n      const tickingFrom = Date.now()\n      updateCard({ ...cardDetails,list: cardDetails.list.id, tickingFrom })\n      const { list, id, title } = cardDetails\n      updateList({\n        list: list.id,\n        id,\n        title,\n        tickingFrom\n      })\n    }\n  }\n\n  const handleMove = list => {\n    //get card details props updatecard and update list\n    const oldList = cardDetails.list.id\n    updateCard({ ...cardDetails,list: list })\n    const { id, title, tickingFrom } = cardDetails\n    updateList({\n      list,\n      id,\n      title,\n      tickingFrom,\n      oldList\n    })\n    setShowLists(false)\n  }\n\n  const updateCard = card => {\n    cardService\n      .update(card.id, card)\n      .then(response => {\n        console.log(response)\n        setCardDetails(response)\n        makeModalStatic(false)\n      })\n  }\n  const updateCardTitle = newTitle => {\n    updateCard({ ...cardDetails, list: cardDetails.list.id,title: newTitle })\n    updateList({ list: cardDetails.list.id, id: cardDetails.id, title: newTitle })\n  }\n\n  const handleDelete = card => {\n    cardService.remove(card.id)\n    removeFromList(card)\n    onCardClose()\n  }\n\n  if(!card)\n    return null\n\n  return (\n    cardDetails ?\n      <div>\n        <i\n          tabIndex='0'\n          className=\"fas fa-times\"\n          style={cancelStyle}\n          onClick={() => onCardClose()}\n          onKeyDown={e => e.key === 'Enter' && onCardClose()} />\n        <Editable\n        //Card details from the get request have the list populated with details at the backend while sending card\n        // for updation need to change it back to id. Also the lists state needs to be updated so the board gets updated with\n        // the new title\n          updateElement={newTitle => updateCardTitle(newTitle)}\n          isEditing={makeModalStatic}\n        >\n          <h3 className='card-title' tabIndex='0'>{cardDetails.title}</h3>\n        </Editable>\n        <div >\n          <span>in list </span>\n          {!showLists ? <strong\n            tabIndex='0'\n            onClick={() => setShowLists(true)}\n            onKeyDown={(e) => e.key === 'Enter' && setShowLists(true)}\n          >\n            {cardDetails.list.title}\n          </strong>\n            :\n            <ListsDropDown lists={lists} currentList={cardDetails.list} onMove={handleMove} />\n          }\n        </div>\n        <br/>\n        <div>\n          <strong>Description</strong>\n          {!cardDetails.description\n            ?\n            <div>\n              <Editable\n                placeholder='Add a detailed description'\n                updateElement={description => updateCard({ ...cardDetails, list: cardDetails.list.id, description })}\n                isEditing={makeModalStatic}>\n                <span>Add a detailed description</span>\n              </Editable>\n            </div>\n            :\n            <div tabIndex='0'>\n              <Editable\n                updateElement={description => updateCard({ ...cardDetails, list: cardDetails.list.id, description })}\n                isEditing={makeModalStatic}>\n                <span>{cardDetails.description}</span>\n              </Editable>\n            </div>}\n        </div>\n        {/* To be implemented later, due date with date picker and the timer */}\n        {/* <div><strong>Due date</strong> <span>{cardDetails.dueDate}</span></div> */}\n        <br/>\n        {/* <i className=\"far fa-clock\" style={clockStyle} onClick={onTimerClick}> {timer? 'Stop': 'Start'} timer</i> */}\n        {/* Shows the ticking clock */}\n        {/* {timer && <p>{new Date(timer).toISOString().substr(11, 8)}</p>} */}\n        {/* {cardDetails.timeSpent && ([...cardDetails.timeSpent]\n        .sort((a,b) => b.start-a.start))\n        .map(timeSpent => <p key={timeSpent.start} >{formatDate(timeSpent.start)} - {formatDate(timeSpent.stop)}</p> )} */}\n        <button className='primary delete-card' onClick={() => handleDelete(cardDetails)}>Delete card</button>\n      </div>\n      : null)\n}\n\nexport default CardDetails\n","import React, { useEffect, useRef } from 'react'\nimport './Modal.css'\n//Right now this is being used only for card detail. Can later be used for opening reports on time tracking.\n//Adding accessibility to the Modal was not very easy. But there were quite a few learnings, ES6 Map,\n// Node.contains and practice for DOM manipulation in react.\n\nconst Modal = ({ children, onCloseModal, freeze }) => {\n\n  const modalRef = useRef()\n  const focusableElements = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n\n  useEffect(() => {\n    function keyListener(e) {\n      const listener = keyListenersMap.get(e.keyCode)\n      return listener && listener(e)\n    }\n    document.addEventListener('keydown', keyListener)\n\n    return () => document.removeEventListener('keydown', keyListener)\n  })\n\n  const handleTabKey = (e) => {\n    const focusableModalElements = modalRef.current.querySelectorAll(focusableElements)\n    const firstFocusableElement = focusableModalElements[0]\n    const lastFocusableElement = focusableModalElements[focusableModalElements.length - 1]\n    if(!document.getElementById('modal').contains(document.activeElement)){\n      //If focus is outside modal first bring it in and focus on the first focusable element.\n      // Take care inside the children that the first focusable is x button so that it can be closed\n      // easily on opening accidently.\n      firstFocusableElement.focus()\n      e.preventDefault() //Doesn't work properly without this what is the default behaviour, check\n    }\n\n    if(!e.shiftKey && document.activeElement === lastFocusableElement){\n      firstFocusableElement.focus()\n      e.preventDefault()\n    }\n    if(e.shiftKey && document.activeElement === firstFocusableElement){\n      lastFocusableElement.focus()\n      e.preventDefault()\n    }\n\n  }\n\n  //freeze flag is set when there is an open form in the Modal which should be closed first\n  const handleCloseModal = () => {\n    !freeze && onCloseModal()\n  }\n\n  const keyListenersMap = new Map([[27, handleCloseModal], [9, handleTabKey]])\n\n  return (\n    <div>\n      <div id='modal' aria-modal='true' role='dialog' >\n        <div className='modal-content' ref={modalRef}>{ children }</div>\n      </div>\n      <div id='backdrop' onClick={handleCloseModal} />\n    </div>)\n}\n\nexport default Modal","//Look into the possibility of combining this and cards into a custom hook as shown in the fullstack open part 7a example\n// There are some differences though\n\nimport axios from 'axios'\nimport storage from '../utils/storage'\nconst baseUrl = '/api/lists'\n\nconst getConfig = () => {\n  return {\n    headers: { Authorization: `bearer ${storage.loadUser().token}` }\n  }\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl, getConfig())\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n\n  const response = await axios.post(baseUrl, newObject, getConfig())\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl }/${id}`, newObject, getConfig())\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  axios.delete(`${ baseUrl }/${id}`, getConfig())\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect, useContext } from 'react'\nimport List from '../../components/List'\nimport AddArea from '../../components/AddArea'\nimport CardDetails from '../../components/CardDetails'\nimport Modal from '../../components/Modal'\nimport listService from '../../services/lists'\nimport cardService from '../../services/cards'\nimport storage from '../../utils/storage'\nimport './Kanban.css'\nimport { UserContext } from '../../user-context'\n\nconst Kanban = () => {\n\n  const [lists, setLists] = useState('')\n  const [showCard, setShowCard] = useState(false)\n  const [cardToShow, setCardToShow] = useState('')\n  const { setIsAuthenticated } = useContext(UserContext)\n  const [freezeModal, setFreezeModal] = useState('')\n\n  useEffect(() => {\n\n    listService\n      .getAll()\n      .then(initialLists => {\n        setLists(initialLists)\n      })\n\n  },[])\n\n  const handleAddNewList = (title,...ignore) => {\n    const listObject = { title }\n\n    listService\n      .create(listObject)\n      .then(returnedList => {\n        setLists(lists.concat(returnedList))\n      })\n  }\n  const handleAddNewCard = (title,list) => {\n    const cardObject = {\n      title,\n      list\n    }\n    cardService\n      .create(cardObject)\n      .then(returnedCard => {\n        setLists(lists.map(l => l.id !== list ? l : { ...l,cards: l.cards.concat({\n          title: returnedCard.title,\n          dueDate: returnedCard.dueDate,\n          tickingFrom: returnedCard.tickingFrom,\n          id: returnedCard.id\n        })\n        }))\n      })\n  }\n\n  const handleOpenCard = async (id) => {\n    setShowCard(true)\n    setCardToShow(id)\n\n  }\n\n  const handleCloseModal = () => {\n    setShowCard(false)\n    setCardToShow(null)\n  }\n  const handleUpdateList = ({ list,id,title,oldList }) => {\n    //If the card has not been moved update the card info in the list\n    !oldList\n      ? setLists(\n        lists\n          .map(l => l.id !== list\n            ? l\n            : { ...l, cards: l.cards.map(cardInList => cardInList.id !== id ? cardInList : { id, title }) })\n      ) // If the card has been moved, add it to the new list and delete from old\n      : setLists(lists.map(l => l.id === list\n        ? { ...l,cards: [...l.cards,{ id, title }] }\n        : l.id === oldList\n          ? { ...l,cards: l.cards.filter(card => card.id !== id ) }\n          : l\n      ))\n  }\n  const handleUpdateTitle = (updatedList) => {\n    setLists(lists.map(list => list.id !== updatedList.id ? list : updatedList))\n  }\n\n  const handleDeleteCard = card => {\n    setLists(lists.map(l => l.id !== card.list.id ? l : { ...l,cards: l.cards.filter(c => c.id !== card.id) } ))\n  }\n\n  const handleDeleteList = id => {\n    listService.remove(id)\n    setLists(lists.filter(list => list.id !== id))\n  }\n\n  const handleLogout = () => {\n    storage.logoutUser()\n    setIsAuthenticated(false)\n  }\n\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <h1>Task Manager\n          <button className='primary logout' onClick={handleLogout}>\n          Logout\n          </button>\n        </h1>\n      </header>\n      <main className='main'>\n        {lists.length !== 0 && lists.map(list =>\n          <List\n            key={list.id}\n            list={list}\n            onAddCard={handleAddNewCard}\n            onOpenCard={handleOpenCard}\n            updateTitle={handleUpdateTitle}\n            onDelete={handleDeleteList}\n          />)}\n        {showCard && <Modal onCloseModal={handleCloseModal} freeze={freezeModal}>\n          <CardDetails\n            card={cardToShow}\n            onCardClose={handleCloseModal}\n            updateList={handleUpdateList}\n            makeModalStatic={flag => setFreezeModal(flag)}\n            lists={lists}\n            removeFromList={handleDeleteCard}\n          />\n        </Modal>}\n        <AddArea\n          area='list'\n          id={null}\n          addNewItem={handleAddNewList}\n        />\n      </main>\n      <footer className='board-footer'>\n        <p className='attribution'>\n          <span>Photo by </span>\n          <a href='https://www.instagram.com/vikranthupili/' target='_blank' rel='noopener noreferrer'>Vikranth Thupili</a>\n        </p>\n      </footer>\n    </div>\n  )\n}\n\nexport default Kanban\n","import React, { useContext }  from 'react'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport { UserContext } from './user-context'\nimport Register from './pages/Register'\nimport Login from './pages/Login'\nimport Kanban from './pages/Kanban'\n\nconst Routes = () => {\n\n  const { isAuthenticated } = useContext(UserContext)\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/' exact>\n          { isAuthenticated ? <Kanban /> : <Redirect to='/login' /> }\n        </Route>\n        <Route path='/register' exact component={Register} />\n        <Route path='/login' exact>\n          { isAuthenticated ? <Redirect to='/' /> : <Login /> }\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Routes\n\n//In future will have routes for archive and project graphs","import React from 'react'\nimport Routes from './routes'\nimport './App.css'\nimport { ContextWrapper } from './user-context'\n\nconst App = () => {\n  return (\n    <ContextWrapper>\n      <div className=\"content\">\n        <Routes />\n      </div>\n    </ContextWrapper>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}